<!DOCTYPE html>
<html>

<head>
  <title>Blocknet</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
  <script src=/javascripts/cryptoUtils.js></script>
  <script src="https://code.iconify.design/1/1.0.7/iconify.min.js"></script>
  <script src="//code.jquery.com/jquery-1.11.3.min.js"></script>
  <script src="https://use.fontawesome.com/fe459689b4.js"></script>
  <script src="js/like-dislike.js"></script>
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
  <script src="https://code.jquery.com/jquery-3.4.1.min.js"
    integrity="sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=" crossorigin="anonymous"></script>
  <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh" crossorigin="anonymous">
  <link rel='stylesheet' href='/stylesheets/style.css' />
  <script src="https://code.jquery.com/jquery-3.4.1.slim.min.js"
    integrity="sha384-J6qa4849blE2+poT4WnyKhv5vZF5SrPo0iEjwBvKU7imGFAV0wwj1yYfoRSJoZ+n"
    crossorigin="anonymous"></script>
  <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js"
    integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo"
    crossorigin="anonymous"></script>
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js"
    integrity="sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6"
    crossorigin="anonymous"></script>
  <script src="https://cdn.jsdelivr.net/npm/qrcodejs@1.0.0/qrcode.js"
    integrity="sha256-8/eLH6vbqijhNfL0aBf4rG0Z0FzenNbYbuR2V/zSIbE=" crossorigin="anonymous"></script>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.12.1/css/all.min.css" />
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-timeago/1.6.7/jquery.timeago.min.js"></script>

  <style>
    button{
  cursor: pointer;
  outline: 0;
  color: #AAA;

}

.btn:focus {
  outline: none;
}

.green{
  color: green;
}

.red{
  color: red;
}
    </style>

</head>

<body>
  <nav class="navbar navbar-expand-lg  navHead fixed-top shadow">
    <a class="navbar-brand cWhite" href="#"><b>BlockNet</b></a>
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav"
      aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
      <span class="navbar-toggler-icon"></span>
    </button>
    <form class="form-inline col-md-6" style="margin-left:195px; ">
      <input class="form-control  mr-sm-2" id="searchBar" style="width:720px;" type="search" placeholder="Search"
        aria-label="Search">
    </form>
    <span style="margin-left:100px;margin-right:20px;"><b id="navName"></b></span><img id="navImg" src=""
      class="rounded-circle" width="40px" height="40px" onerror="this.style.display='none'" />
  </nav><br><br><br>
  <div class="mCtr">
    <div class="p1">
      <div class="p11 bg-white border shadow-sm">
        <div id="profileCtr" class="profileCtr text-center p-4">
          <div class="text-center m-auto pImgCtr border rounded-circle shadow">
            <img class="" id="pImg" src="#" alt="your image" />
          </div><br>
          <b><span id="pName"></span></b><br><br>
          
          <div id="qr" class="m-auto text-center m-4" style="width: 128px;"></div>

          <div id="pAddress" class="p-2"></div><br><br>
          <button class="btn btn-primary" onclick="logout()">Logout</button>
        </div>
        <div id="loginCtr">
          <form id="sCtr" class="text-center p-4">
            <h4>Signup</h4>
            <small>Have an account? <a href="#" onclick="$('#sCtr').hide();$('#lCtr').show()">Login</a></small>
            <br><br>
            <div class="text-center m-auto pImgCtr border rounded-circle shadow">
              <img class="" id="imgPreview" src="https://www.redditstatic.com/avatars/avatar_default_03_4856A3.png"
                alt="your image" />
              <div class="upload-btn-wrapper">
                <button class="btn " style="color: #fff;">+ photo</button>
                <input id="imgInp" type="file" name="myfile" />
              </div>
            </div>

            <div class="form-group text-left">
              <label for="name">Name</label>
              <input type="text" class="form-control" id="name" aria-describedby="nameHelp" placeholder="Enter name"
                required>
              <small id="nameTxt" class="form-text text-muted">You dont need a password, a secure key will be generated
                automatically.</small>
            </div>
            <button type="button" class="btn btn-block btn-primary" onclick="generateProfile()">Generate</button>

            <div id="downloadCtr" style="display: none;">
              <br>
              <small id="" class="form-text text-muted text-left">This file contains your private key keep it somewhere
                safe. This can be used to login to BlockNet</small>
              <a id="download" href="#" class="btn btn-primary btn-block" download="profile.bnf">Download and login</a>
            </div>
          </form>
          <form class="text-center p-4" id="lCtr" style="display: none;">
            <h4>Login</h4>
            <small>New here? <a href="#" onclick="$('#sCtr').show();$('#lCtr').hide()">Generate profile</a></small>
            <br><br>

            <div class="form-group text-left">
              <label for="pFile">Load profile</label>
              <input type="file" id="pFile" name="filename">
              <small id="nameTxt" class="form-text text-muted">upload your profile file</small>
            </div>
            <button type="button" class="btn btn-block btn-primary" onclick="login()">Login</button>

          </form>
        </div>
      </div>
    </div>
    <div class="p2">
      <div class="p21 ">
        <div id="newPostCtr" class="newPostCtr border p-3 bg-white shadow-sm">
          <strong><i class="fa fa-edit"></i> New post</strong><br><br>
          <ul class="nav nav-tabs" id="myTab" role="tablist">
            <li class="nav-item">
              <a class="nav-link active" id="textPost-tab" data-toggle="tab" href="#textPost" role="tab"
                aria-controls="textPost" aria-selected="true"><i class="fa fa-file-alt"> </i> Text</a>
            </li>
            <li class="nav-item">
              <a class="nav-link" id="imagePost-tab" data-toggle="tab" href="#imagePost" role="tab"
                aria-controls="imagePost" aria-selected="false"><i class="fa fa-file-image"> </i> Image</a>
            </li>
          </ul>
          <div class="tab-content" id="myTabContent">
            <div class="tab-pane fade show active border-left border-right border-bottom p-3" id="textPost"
              role="tabpanel" aria-labelledby="textPost-tab">
              <form>
                <div class="form-group">
                  <label for="textPostTitle">Post title</label>
                  <input type="text" class="form-control" id="textPostTitle" placeholder="An interesting title">
                </div>

                <div class="form-group ">
                  <textarea class="form-control" id="textPostContent" rows="3" g
                    placeholder="type something"></textarea>
                </div>
                <div class="text-right"> <small class="text-muted">The post will be added to the
                    blockchain</small>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<button onclick="textPost()"
                    class="btn btn-primary text-right">Post</button></div>

              </form>
            </div>
            <div class="tab-pane fade border-left border-right border-bottom p-3" id="imagePost" role="tabpanel"
              aria-labelledby="imagePost-tab">

              <div class="form-group">
                <label for="imgPostTitle">Post title</label>
                <input type="text" class="form-control" id="imgPostTitle" placeholder="An interesting title">
              </div>

              <div class="form-group ">
                <div class="text-center m-auto postImgCtr border ">
                  <img class="" id="postImgPreview" src="#" alt="" />
                  <div class="post-upload-btn-wrapper">
                    <button class="btn" style="color: #fff;">+ photo</button>
                    <input id="postImgInp" type="file" name="photo" />
                  </div>
                </div>
              </div>
              <div class="text-right"> <small class="text-muted">The post will be added to the
                  blockchain</small>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<button onclick="imagePost()"
                  class="btn btn-primary text-right">Post</button></div>

            </div>

          </div>

        </div><br>

        <div id="postCtr" class="postCtr">

        </div>

      </div>
    </div>
    <div class="p3 ">
      <div class="p31 blockData p-3">
        <strong>Block Data</strong>
        <hr style="background-color: #fff;">
        <table>
          <tr>
            <td><b>Height   :</b></td>
            <td id="bHeight"></td>
          </tr>
          <tr>
            <td><b>Size     :</b></td>
            <td id="bSize"></td>
          </tr>
        </table>
      </div>
    </div>
  </div>

</body>
<script>


  var profile = null;
  function timeSince(date) {

    var seconds = Math.floor((new Date() - date) / 1000);

    var interval = Math.floor(seconds / 31536000);

    if (interval > 1) {
      return interval + " years";
    }
    interval = Math.floor(seconds / 2592000);
    if (interval > 1) {
      return interval + " months";
    }
    interval = Math.floor(seconds / 86400);
    if (interval > 1) {
      return interval + " days";
    }
    interval = Math.floor(seconds / 3600);
    if (interval > 1) {
      return interval + " hours";
    }
    interval = Math.floor(seconds / 60);
    if (interval > 1) {
      return interval + " minutes";
    }
    return Math.floor(seconds) + " seconds";
  }
  function readURL(input) {
    if (input.files && input.files[0]) {
      var reader = new FileReader();

      reader.onload = function (e) {
        $('#imgPreview').attr('src', e.target.result);
      }

      reader.readAsDataURL(input.files[0]);
    }
  }

  $("#imgInp").change(function () {
    readURL(this);
  });
  
  function postreadURL(input) {
    if (input.files && input.files[0]) {
      var reader = new FileReader();

      reader.onload = function (e) {
        $('#postImgPreview').attr('src', e.target.result);
      }

      reader.readAsDataURL(input.files[0]);
    }
  }

  $("#postImgInp").change(function () {
    postreadURL(this);
  });
  function login(){
    var input = document.getElementById('pFile')
    if (input.files && input.files[0]) {
      var reader = new FileReader();

      reader.onload = function (e) {
        window.localStorage.setItem('profile', (e.target.result));
        loadLogin()

      }

      reader.readAsText(input.files[0]);
    }
  }
  function sizeOfObject(object) {

    var objectList = [];
    var stack = [object];
    var bytes = 0;

    while (stack.length) {
      var value = stack.pop();

      if (typeof value === 'boolean') {
        bytes += 4;
      }
      else if (typeof value === 'string') {
        bytes += value.length * 2;
      }
      else if (typeof value === 'number') {
        bytes += 8;
      }
      else if
        (
        typeof value === 'object'
        && objectList.indexOf(value) === -1
      ) {
        objectList.push(value);

        for (var i in value) {
          stack.push(value[i]);
        }
      }
    }
    return bytes;
  }
  function generateProfile() {

    var privKey = cryptoUtils.generatePrivateKey()
    var pubKey = cryptoUtils.privateKeyToPublicKey(privKey)
    var addr = cryptoUtils.publicKeyToAddress(pubKey)
    var profileImage = $('#imgPreview').attr('src');
    var profileName = $('#name').val();
    var userProfileData = {
      privateKey: privKey,
      publicKey: pubKey,
      address: addr,
      profileImage,
      profileName
    }

    console.log(userProfileData)
    $('#download').attr('download', profileName+".bnf");
    $('#download').attr('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(JSON.stringify(userProfileData)));
    $('#downloadCtr').show(100)
    $('#download').on( "click", function() {
      loadLogin()
    })
    window.localStorage.setItem('profile', JSON.stringify(userProfileData));
  }
  function checkLogin() {
    profile = JSON.parse(window.localStorage.getItem('profile'));
    if (profile) {
      return true
    } else {
      return false
    }

  }

  function loadLogin() {
    if (checkLogin()) {
      $('#pImg').attr('src', profile.profileImage);
      $('#navImg').attr('src', profile.profileImage);
      $('#pName').html(profile.profileName);
      $('#navName').html(profile.profileName);
      $('#pAddress').html(profile.address);
      var qrcode = new QRCode('qr', {
        text: profile.address,
        width: 128,
        height: 128,
        colorDark: "#555",
        colorLight: "#ffffff",
        correctLevel: QRCode.CorrectLevel.H
      });

      $('#loginCtr').hide();
      $('#profileCtr').show();
      $('#newPostCtr').show()
    } else {
      $('#loginCtr').show()
      $('#profileCtr').hide()
      $('#newPostCtr').hide()
    }
  }
  loadLogin()
  function logout() {
    window.localStorage.removeItem('profile');
    loadLogin()
  }
  function textPost() {
    var postData = {};
    postData.type = "txt"
    postData.image = profile.profileImage;
    postData.name = profile.profileName;
    postData.data = { title: $('#textPostTitle').val(), content: $('#textPostContent').val() };
    postData.address = profile.address;
    postData.publicKey = profile.publicKey;
    postData.ECDSAsign = cryptoUtils.signData(JSON.stringify(postData.data), profile.privateKey);

    fetch('/api/postdata', {
      method: 'POST',
      headers: {
        'Accept': 'application/json',
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(postData)
    })
      .then(res => res.json())
      .then(data => {
        console.log(data)
      })
    console.log(postData)
    populateHome()
  }
  function imagePost() {
    var postData = {};
    postData.type = "img"
    postData.image = profile.profileImage;
    postData.name = profile.profileName;
    postData.data = { title: $('#imgPostTitle').val(), content: $('#postImgPreview').attr('src') };
    postData.address = profile.address;
    postData.publicKey = profile.publicKey;
    postData.ECDSAsign = cryptoUtils.signData(JSON.stringify(postData.data), profile.privateKey);
    console.log(postData)

    fetch('/api/postimagedata', {
      method: 'POST',
      headers: {
        'Accept': 'application/json',
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(postData)
    })
      .then(res => res.json())
      .then(data => {
        console.log(data)
      })
    populateHome()
  }
  function formatBytes(bytes, decimals = 2) {
    if (bytes === 0) return '0 Bytes';

    const k = 1024;
    const dm = decimals < 0 ? 0 : decimals;
    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];

    const i = Math.floor(Math.log(bytes) / Math.log(k));

    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];
  }
  


  function populateHome() {
    $('#postCtr').html('')
    fetch('/api/getblockchain')
      .then(res => res.json())
      .then(data => {
        data.pop()
        $('#bHeight').html(" " +data.length)
        $('#bSize').html(formatBytes(sizeOfObject(data)))
        data.reverse().reverse().forEach(element => {
          var tAgo = jQuery.timeago(element.timestamp * 1000);

          if (element.data.type == 'img') {

            var tmp = `
          <div class="postItem border bg-white shadow-sm"> 
            <div class="border-bottom ">
              <img class="rounded-circle m-2" width="40px" height="40px" src="${element.data.image}" />
              <span><strong>${element.data.name}</strong></span>&nbsp; <small class="muted">${tAgo}</small>
            </div>
            <div class="p-3 itemText">
              <div ><b>${element.data.data.title}</b></div><br>
              <div class="itemImgCtr "><img class="itemImgPreview" src="${element.data.data.content}"/> </div>
              <div id="demo">
                <button class="btn" id="green" onclick =likeDislike()><i class="fa fa-thumbs-up fa-lg" aria-hidden="true"></i></button>
               <button class="btn" id="red"><i class="fa fa-thumbs-down fa-lg" aria-hidden="true"></i></button>
               

          </div>
            </div>
            
          </div><br>
          `
            $('#postCtr').append(tmp)
          } else {
            var tmp = `
          <div class="postItem border bg-white shadow-sm"> 
            <div class="border-bottom ">
              <img class="rounded-circle m-2" width="40px" height="40px" src="${element.data.image}" />
              <span><strong>${element.data.name}</strong></span>&nbsp; <small class="muted">${tAgo}</small>
            </div>
            <div class="p-3 itemText">
              <div ><b>${element.data.data.title}</b></div><br> 
              <div >${element.data.data.content}</div>
              <div id="demo">
              <button class="btn" id="green" onclick =likeDislike()><i class="fa fa-thumbs-up fa-lg" aria-hidden="true"></i></button>
              <button class="btn" id="red"><i class="fa fa-thumbs-down fa-lg" aria-hidden="true"></i></button>
             
            </div>
            </div>
          </div><br>
          `
            $('#postCtr').append(tmp)
            
           

          }

        });
      })
  }
  populateHome()

  function likeDislike(){
    var btn1 = document.querySelector('#green');
    var btn2 = document.querySelector('#red');

    btn1.addEventListener('click', function() {
  
    if (btn2.classList.contains('red')) {
      btn2.classList.remove('red');
    } 
    this.classList.toggle('green');
  
    });

    btn2.addEventListener('click', function() {
  
    if (btn1.classList.contains('green')) {
      btn1.classList.remove('green');
    } 
    this.classList.toggle('red');
  
    });}
    likeDislike()
 

</script>

</html>
